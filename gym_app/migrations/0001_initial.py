# Generated by Django 3.2.3 on 2021-06-01 08:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_physician', models.BooleanField(default=False)),
                ('is_instructor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('batch_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('present_days', models.IntegerField()),
                ('bill_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.IntegerField()),
                ('due_date', models.DateField()),
                ('paid_on', models.DateField(auto_now=True)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DietPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=50)),
                ('plan', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.CharField(max_length=50)),
                ('picture', models.ImageField(upload_to='equipment')),
            ],
        ),
        migrations.CreateModel(
            name='FirstAid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cause', models.CharField(max_length=50)),
                ('first_aid1', models.CharField(max_length=50)),
                ('first_aid2', models.CharField(blank=True, max_length=50, null=True)),
                ('first_aid3', models.CharField(blank=True, max_length=50, null=True)),
                ('first_aid4', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(max_length=50)),
                ('phone_no', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField(max_length=100)),
                ('qualification', models.CharField(max_length=50)),
                ('occupation', models.CharField(max_length=50)),
                ('photo', models.ImageField(upload_to='profile')),
                ('consultation_time', models.TimeField(blank=True, null=True)),
                ('required_batch_time', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.IntegerField(default=0)),
                ('required_batch_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Batch.batch_name+', to='gym_app.batch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='register', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=50)),
                ('picture', models.ImageField(upload_to='service')),
            ],
        ),
        migrations.CreateModel(
            name='UserHealth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.CharField(max_length=20)),
                ('weight', models.CharField(max_length=20)),
                ('health_issue', models.CharField(max_length=50)),
                ('medicine_consumption', models.TextField()),
                ('transformation_status', models.CharField(max_length=50, null=True)),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gym_app.register')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Register.name+', to='gym_app.register')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym_app.batch')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Batch.batch_name+', to='gym_app.register')),
            ],
        ),
        migrations.CreateModel(
            name='Doubts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doubts', models.TextField(max_length=200)),
                ('reply', models.TextField(blank=True, max_length=200, null=True)),
                ('physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym_app.register')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Register.name+', to='gym_app.register')),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_no', models.CharField(max_length=30)),
                ('card_cvv', models.CharField(max_length=30)),
                ('expiry_date', models.CharField(max_length=200)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym_app.bill')),
            ],
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint', models.TextField(max_length=100)),
                ('reply', models.TextField(max_length=100, null=True)),
                ('user_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gym_app.register')),
            ],
        ),
        migrations.AddField(
            model_name='bill',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym_app.register'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.CharField(max_length=10)),
                ('date', models.DateField()),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='gym_app.register')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.IntegerField(default=0)),
                ('physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym_app.register')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Register.name+', to='gym_app.register')),
            ],
        ),
    ]
